(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[663],{86094:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OpenloginAdapter:function(){return OpenloginAdapter},getOpenloginDefaultOptions:function(){return getOpenloginDefaultOptions}});var _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(3388),_web3auth_base__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(45624),_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(4942),_web3auth_base_provider__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(67845),lodash_merge__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(72378),lodash_merge__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_3__);let getOpenloginDefaultOptions=(chainNamespace,chainId)=>({adapterSettings:{network:_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.dr.MAINNET,clientId:"",uxMode:_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.$e.POPUP},chainConfig:chainNamespace?(0,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.h2)(chainNamespace,chainId):null,loginSettings:{}});function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}return target}class OpenloginAdapter extends _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.J5{constructor(params){var _params$chainConfig,_params$chainConfig2,_params$chainConfig3,_params$chainConfig4;super(),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"name",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.OPENLOGIN),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"adapterNamespace",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.yk.MULTICHAIN),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"type",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.hN.IN_APP),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"openloginInstance",null),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"status",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.NOT_READY),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"currentChainNamespace",_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.EIP155),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"openloginOptions",void 0),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"loginSettings",{}),(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__.Z)(this,"privKeyProvider",null),_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.debug("const openlogin adapter",params);let defaultOptions=getOpenloginDefaultOptions(null===(_params$chainConfig=params.chainConfig)||void 0===_params$chainConfig?void 0:_params$chainConfig.chainNamespace,null===(_params$chainConfig2=params.chainConfig)||void 0===_params$chainConfig2?void 0:_params$chainConfig2.chainId);if(this.openloginOptions=_objectSpread(_objectSpread({clientId:"",network:_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.dr.MAINNET},defaultOptions.adapterSettings),params.adapterSettings||{}),this.loginSettings=_objectSpread(_objectSpread({},defaultOptions.loginSettings),params.loginSettings),this.sessionTime=this.loginSettings.sessionTime||86400,null!==(_params$chainConfig3=params.chainConfig)&&void 0!==_params$chainConfig3&&_params$chainConfig3.chainNamespace){this.currentChainNamespace=null===(_params$chainConfig4=params.chainConfig)||void 0===_params$chainConfig4?void 0:_params$chainConfig4.chainNamespace;let defaultChainIdConfig=defaultOptions.chainConfig?defaultOptions.chainConfig:{};if(this.chainConfig=_objectSpread(_objectSpread({},defaultChainIdConfig),null==params?void 0:params.chainConfig),_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.debug("const openlogin chainConfig",this.chainConfig),!this.chainConfig.rpcTarget&&params.chainConfig.chainNamespace!==_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.OTHER)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.invalidParams("rpcTarget is required in chainConfig")}}get chainConfigProxy(){return this.chainConfig?_objectSpread({},this.chainConfig):null}get provider(){var _this$privKeyProvider;return(null===(_this$privKeyProvider=this.privKeyProvider)||void 0===_this$privKeyProvider?void 0:_this$privKeyProvider.provider)||null}set provider(_){throw Error("Not implemented")}async init(options){var _this$openloginOption;if(super.checkInitializationRequirements(),!(null!==(_this$openloginOption=this.openloginOptions)&&void 0!==_this$openloginOption&&_this$openloginOption.clientId))throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.invalidParams("clientId is required before openlogin's initialization");if(!this.chainConfig)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.invalidParams("chainConfig is required before initialization");let isRedirectResult=!1;if(this.openloginOptions.uxMode===_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.$e.REDIRECT){let redirectResult=(0,_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.Gv)();Object.keys(redirectResult).length>0&&redirectResult._pid&&(isRedirectResult=!0)}this.openloginOptions=_objectSpread(_objectSpread({},this.openloginOptions),{},{replaceUrlOnRedirect:isRedirectResult}),this.openloginInstance=new _toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.ZP(this.openloginOptions),_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.debug("initializing openlogin adapter init"),await this.openloginInstance.init(),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.READY,_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.OPENLOGIN);try{_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.debug("initializing openlogin adapter"),this.openloginInstance.privKey&&(options.autoConnect||isRedirectResult)&&await this.connect()}catch(error){_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.error("Failed to connect with cached openlogin provider",error),this.emit("ERRORED",error)}}async connect(params){super.checkConnectionRequirements(),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.CONNECTING,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.CONNECTING,_objectSpread(_objectSpread({},params),{},{adapter:_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.OPENLOGIN}));try{return await this.connectWithProvider(params),this.provider}catch(error){if(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.cM.error("Failed to connect with openlogin provider",error),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.ERRORED,error),null!=error&&error.message.includes("user closed popup"))throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.popupClosed();throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.connectionError("Failed to login with openlogin")}}async disconnect(){let options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.CONNECTED)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("openloginInstance is not ready");await this.openloginInstance.logout(),options.cleanup?(this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.NOT_READY,this.openloginInstance=null,this.privKeyProvider=null):this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.DISCONNECTED)}async authenticateUser(){if(this.status!==_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.CONNECTED)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.notConnectedError("Not connected with wallet, Please login/connect first");let userInfo=await this.getUserInfo();return{idToken:userInfo.idToken}}async getUserInfo(){if(this.status!==_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.CONNECTED)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.RM.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("openloginInstance is not ready");let userInfo=await this.openloginInstance.getUserInfo();return userInfo}setAdapterSettings(adapterSettings){if(this.status===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.READY)return;let defaultOptions=getOpenloginDefaultOptions();this.openloginOptions=_objectSpread(_objectSpread(_objectSpread({},defaultOptions.adapterSettings),this.openloginOptions||{}),adapterSettings),adapterSettings.sessionTime&&(this.loginSettings=_objectSpread(_objectSpread({},this.loginSettings),{},{sessionTime:adapterSettings.sessionTime}))}setChainConfig(customChainConfig){super.setChainConfig(customChainConfig),this.currentChainNamespace=customChainConfig.chainNamespace}async connectWithProvider(params){if(!this.chainConfig)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.invalidParams("chainConfig is required before initialization");if(!this.openloginInstance)throw _web3auth_base__WEBPACK_IMPORTED_MODULE_1__.Ty.notReady("openloginInstance is not ready");if(this.currentChainNamespace===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.SOLANA){let{SolanaPrivateKeyProvider}=await Promise.all([__webpack_require__.e(766),__webpack_require__.e(108),__webpack_require__.e(215),__webpack_require__.e(702)]).then(__webpack_require__.bind(__webpack_require__,44445));this.privKeyProvider=new SolanaPrivateKeyProvider({config:{chainConfig:this.chainConfig}})}else if(this.currentChainNamespace===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.EIP155){let{EthereumPrivateKeyProvider}=await Promise.all([__webpack_require__.e(482),__webpack_require__.e(62),__webpack_require__.e(644)]).then(__webpack_require__.bind(__webpack_require__,52062));this.privKeyProvider=new EthereumPrivateKeyProvider({config:{chainConfig:this.chainConfig}})}else if(this.currentChainNamespace===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.OTHER)this.privKeyProvider=new _web3auth_base_provider__WEBPACK_IMPORTED_MODULE_2__.FL;else throw Error("Invalid chainNamespace: ".concat(this.currentChainNamespace," found while connecting to wallet"));if(!this.openloginInstance.privKey&&params){var _params$extraLoginOpt;this.loginSettings.curve||(this.loginSettings.curve=this.currentChainNamespace===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.SOLANA?_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.x7.ED25519:_toruslabs_openlogin__WEBPACK_IMPORTED_MODULE_0__.x7.SECP256K1),await this.openloginInstance.login(lodash_merge__WEBPACK_IMPORTED_MODULE_3___default()(this.loginSettings,{loginProvider:params.loginProvider},{extraLoginOptions:_objectSpread(_objectSpread({},params.extraLoginOptions||{}),{},{login_hint:params.login_hint||(null===(_params$extraLoginOpt=params.extraLoginOptions)||void 0===_params$extraLoginOpt?void 0:_params$extraLoginOpt.login_hint)})}))}let finalPrivKey=this.openloginInstance.privKey;if(finalPrivKey){if(this.currentChainNamespace===_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.EN.SOLANA){let{getED25519Key}=await Promise.all([__webpack_require__.e(108),__webpack_require__.e(418)]).then(__webpack_require__.bind(__webpack_require__,33946));finalPrivKey=getED25519Key(finalPrivKey).sk.toString("hex")}await this.privKeyProvider.setupProvider(finalPrivKey),this.status=_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.MP.CONNECTED,this.emit(_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.n2.CONNECTED,{adapter:_web3auth_base__WEBPACK_IMPORTED_MODULE_1__.rW.OPENLOGIN,reconnected:!params})}}}},27790:function(){}}]);